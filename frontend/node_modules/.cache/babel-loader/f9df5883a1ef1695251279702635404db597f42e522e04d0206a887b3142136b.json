{"ast":null,"code":"// import React, { createContext, useState } from 'react';\n// import all_product from '../Components/Assets/all_product';\n\n// export const ShopContext = createContext(null);\n\n// const getDefaultCart = () => {\n//   let cart = {};\n//   for (let index = 0; index < all_product.length; index++) {\n//     cart[index] = 0;\n//   }\n//   return cart;\n// };\n\n// const ShopContextProvider = (props) => {\n//   const [cartItems, setCartItems] = useState(getDefaultCart());\n\n//   const addToCart = (itemId) => {\n//     setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\n//   };\n\n//   const removeFromCart = (itemId) => {\n//     setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\n//   };\n\n//   const getTotalCartAmount = () => {\n//     let totalAmount = 0;\n//     for (const item in cartItems) {\n//       if (cartItems[item] > 0) {\n//         let itemInfo = all_product.find((product) => product.id === Number(item));\n//         totalAmount += itemInfo.new_price * cartItems[item];\n//       }\n//     }\n//     return totalAmount;\n//   };\n\n//   const getTotalCartItems = () => {\n//     let totalItem = 0;\n//     for (const item in cartItems) {\n//       if (cartItems[item] > 0) {\n//         totalItem += cartItems[item];\n//       }\n//     }\n//     return totalItem;\n//   };\n\n//   const contextValue = {\n//     getTotalCartItems,\n//     getTotalCartAmount,\n//     all_product,\n//     cartItems,\n//     addToCart,\n//     removeFromCart,\n//   };\n\n//   return (\n//     <ShopContext.Provider value={contextValue}>\n//       {props.children}\n//     </ShopContext.Provider>\n//   );\n// };\n\n// export default ShopContextProvider;","map":{"version":3,"names":[],"sources":["C:/Users/aliha/Desktop/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["// import React, { createContext, useState } from 'react';\r\n// import all_product from '../Components/Assets/all_product';\r\n\r\n// export const ShopContext = createContext(null);\r\n\r\n// const getDefaultCart = () => {\r\n//   let cart = {};\r\n//   for (let index = 0; index < all_product.length; index++) {\r\n//     cart[index] = 0;\r\n//   }\r\n//   return cart;\r\n// };\r\n\r\n// const ShopContextProvider = (props) => {\r\n//   const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n//   const addToCart = (itemId) => {\r\n//     setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n//   };\r\n\r\n//   const removeFromCart = (itemId) => {\r\n//     setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n//   };\r\n\r\n//   const getTotalCartAmount = () => {\r\n//     let totalAmount = 0;\r\n//     for (const item in cartItems) {\r\n//       if (cartItems[item] > 0) {\r\n//         let itemInfo = all_product.find((product) => product.id === Number(item));\r\n//         totalAmount += itemInfo.new_price * cartItems[item];\r\n//       }\r\n//     }\r\n//     return totalAmount;\r\n//   };\r\n\r\n//   const getTotalCartItems = () => {\r\n//     let totalItem = 0;\r\n//     for (const item in cartItems) {\r\n//       if (cartItems[item] > 0) {\r\n//         totalItem += cartItems[item];\r\n//       }\r\n//     }\r\n//     return totalItem;\r\n//   };\r\n\r\n//   const contextValue = {\r\n//     getTotalCartItems,\r\n//     getTotalCartAmount,\r\n//     all_product,\r\n//     cartItems,\r\n//     addToCart,\r\n//     removeFromCart,\r\n//   };\r\n\r\n//   return (\r\n//     <ShopContext.Provider value={contextValue}>\r\n//       {props.children}\r\n//     </ShopContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default ShopContextProvider;\r\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}